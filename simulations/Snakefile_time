import os

# To run locally:
# snakemake --snakefile Snakefile_time --keep-going --cores 8

localrules: all

sim_folder = os.path.abspath('.')
REPETITIONS = list(range(100))
THREADS = 8
DATASETS = ['medium', 'large']


rule all:
    input:
        expand(os.path.join(sim_folder, '{dataset}', 'times.tab'), dataset=DATASETS)


rule times:
    '''
    Check time.
    '''
    input:
        time = expand(os.path.join(sim_folder, '{{dataset}}', 'trees', 'tree.{i}.threads={cores}.time'), \
            i=REPETITIONS, cores=range(1, THREADS)),
    output:
        tab = os.path.join(sim_folder, '{dataset}', 'times.tab'),
    params:
        mem = 2000,
        name = 'times_{dataset}',
        qos = 'fast',
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6richer"
    shell:
        """
        python3 py/time.py --time {input.time} --tab {output.tab} --cores
        """

rule estimate_params_p_fixed_threads:
    '''
    Estimate parameters on the simulated forest.
    '''
    input:
        nwk = os.path.join(sim_folder, '{dataset}', 'trees', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{dataset}', 'trees', 'tree.{i}.log'),
    output:
        time = expand(os.path.join(sim_folder, '{{dataset}}', 'trees', 'tree.{{i}}.threads={cores}.time'), cores=range(1, THREADS)),
    params:
        mem = 2000,
        name = 'estimate_parallel_{dataset}_{i}',
        qos = 'fast',
        pattern = os.path.join(sim_folder, '{dataset}', 'trees', 'tree.{i}.threads=$th.time'),
    threads: THREADS
    shell:
        """
        u=`tail -n 1 {input.log} | awk '{{ print $3 }}'`
        p=`tail -n 1 {input.log} | awk '{{ print $8 }}'`
        cat {input.log}

        for th in $(seq 1 {threads})
        do
            bdei_infer -u $u --p $p -t $th --nwk {input.nwk} --time_log {params.pattern}
        done
        """
