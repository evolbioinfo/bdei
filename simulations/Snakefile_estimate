import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7

localrules: all

sim_folder = os.path.abspath('.')
DATASETS = ['medium', 'large']
DATASETS = ['medium']
REPETITIONS = list(range(100))
PLANTS = ['tree', 'forest']

rule all:
    input:
        expand(os.path.join(sim_folder, '{dataset}', 'errors.png'), dataset=DATASETS)


rule combine_estimates:
    '''
    Combine estimates.
    '''
    input:
        log = expand(os.path.join(sim_folder, '{{dataset}}', '{type}s', '{type}.{i}.log'), i=REPETITIONS, type=['tree']),
        est_p = expand(os.path.join(sim_folder, '{{dataset}}', '{type}s', '{type}.{i}.est'), i=REPETITIONS, type=['tree']),
        est_b = os.path.join(sim_folder, '{dataset}', 'BEAST2.csv'),
        est_dl = os.path.join(sim_folder, '{dataset}', 'CNN_CBLV.csv'),
        est_b_ci = os.path.join(sim_folder, '{dataset}', 'BEAST2_CI.csv'),
        est_dl_ci = os.path.join(sim_folder, '{dataset}', 'CNN_CBLV_CI.csv')
    output:
        tab = os.path.join(sim_folder, '{dataset}', 'estimates.tab'),
    params:
        mem = 2000,
        name = 'estimates',
        qos = 'fast',
    threads: 1
    shell:
        """
        python3 py/summary_table.py --real {input.log} \
        --estimated {input.est_p} \
        --estimated_beast2 {input.est_b} --estimated_dl {input.est_dl} \
        --estimated_beast2_CI {input.est_b_ci} --estimated_dl_CI {input.est_dl_ci} \
        --tab {output.tab}
        """

rule combine_large_estimates:
    '''
    Combine estimates.
    '''
    input:
        log = expand(os.path.join(sim_folder, 'large', '{type}s', '{type}.{i}.log'), i=REPETITIONS, type=PLANTS),
        est_p = expand(os.path.join(sim_folder, 'large', '{type}s', '{type}.{i}.est'), i=REPETITIONS, type=PLANTS),
    output:
        tab = os.path.join(sim_folder, 'large', 'estimates.tab'),
    params:
        mem = 2000,
        name = 'estimates',
        qos = 'fast',
    threads: 1
    shell:
        """
        python3 py/summary_table.py --real {input.log} --estimated_p_fixed {input.est_p} --tab {output.tab}
        """


rule plot_errors:
    '''
    Plots the errors.
    '''
    input:
        tab = os.path.join(sim_folder, '{dataset}', 'estimates.tab'),
    output:
        pdf = os.path.join(sim_folder, '{dataset}', 'errors.png'),
        tab = os.path.join(sim_folder, '{dataset}', 'errors.tab'),
    params:
        mem = 2000,
        name = 'errors',
        qos = 'fast'
    threads: 1
    shell:
        """
        python3 py/plot_error.py --estimates {input.tab} \
        --tab {output.tab} --pdf {output.pdf}
        """

rule estimate_params_p_fixed:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{dataset}', '{type}s', '{type}.{i}.nwk'),
        log = os.path.join(sim_folder, '{dataset}', '{type}s', '{type}.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{dataset}', '{type}s', '{type}.{i}.est'),
    params:
        mem = 2000,
        name = 'estimate_{type}_{i}',
        qos = 'fast'
    threads: 2
    shell:
        """
        u=`tail -n 1 {input.log} | awk '{{ print $3 }}'`
        p=`tail -n 1 {input.log} | awk '{{ print $8 }}'`
        cat {input.log}

        bdei_infer -u $u --p $p -c 100 -t {threads} --nwk {input.nwk} --log {output.est}
        """

