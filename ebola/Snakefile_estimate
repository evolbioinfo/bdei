import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7 --config folder=.


localrules: all

folder = os.path.abspath(config["folder"])
ebola_folder = os.path.join(folder, 'data', 'SLE')
IS=range(10)
ITS = [2.58, 5]
Ns = [533, 800]
#IS=[5]
#ITS = [5]
#Ns = [800]

rule all:
    input:
        os.path.join(ebola_folder, 'estimates.tab'),

rule estimate_params_it:
    '''
    Estimate parameters on the simulated forest.
    '''
    input:
        nwk = os.path.join(ebola_folder, 'SLE.{i}.days.nwk'),
    output:
        est = os.path.join(ebola_folder, 'SLE.{i}_N={N}_it={it}.est'),
        time = os.path.join(ebola_folder, 'SLE.{i}_N={N}_it={it}.time'),
    params:
        mem = 2000,
        name = 'estimate_{i}',
        qos = 'fast'
    threads: 3
    shell:
        """
        N=800
        u=`grep -o ';' {input.nwk}  | wc -l`
        u=$(({wildcards.N}-u))
        psi=`bc -l <<< '1/{wildcards.it}'`

        bdei_infer --psi $psi -u $u --threads {threads} -c 100 --nwk {input.nwk} --log {output.est} --time_log {output.time}
        """

rule combine_estimates:
    '''
    Combine estimates.
    '''
    input:
        nwk = expand(os.path.join(ebola_folder, 'SLE.{i}.days.nwk'), i=IS),
        est = expand(os.path.join(ebola_folder, 'SLE.{i}_{N_setting}_{setting}.est'), N_setting=['N=' + str(_) for _ in Ns], setting=['it=' + str(_) for _ in ITS], i=IS),
        times = expand(os.path.join(ebola_folder, 'SLE.{i}_{N_setting}_{setting}.time'), N_setting=['N=' + str(_) for _ in Ns], setting=['it=' + str(_) for _ in ITS], i=IS),
    output:
        tab = os.path.join(ebola_folder, 'estimates.tab'),
        time = os.path.join(ebola_folder, 'estimates.time'),
    params:
        mem = 2000,
        name = 'estimates',
        qos = 'fast',
        labels = expand('{i}_{N_setting}_{setting}', N_setting=['N=' + str(_) for _ in Ns], setting=['ts=' + str(_) for _ in ITS], i=IS),
    threads: 1
    shell:
        """
        python3 py/summary_table.py --forests {input.nwk} --estimates {input.est} --labels {params.labels} --tab {output.tab} --times {input.times} --time {output.time}
        """
