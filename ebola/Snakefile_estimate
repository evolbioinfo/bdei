import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"


localrules: all

ruleorder: estimate_p_bottom_u_fixed > estimate_p_bottom

folder = os.path.abspath(config.get("folder", '.'))
ebola_folder = os.path.join(folder, 'data', 'SLE')
IS=range(10)

rule all:
    input:
        os.path.join(ebola_folder, 'estimates.bottom.tab'),
        # os.path.join(ebola_folder, 'estimates.bottom_u.tab')


rule count_tips:
    '''
    Counts the number of tips in the forest
    '''
    input:
        nwk = os.path.join(ebola_folder, '{tree}.nwk'),
    output:
        log = os.path.join(ebola_folder, '{tree}.tips'),
    params:
        mem = 2000,
        name = 'tips',
        qos = 'tips'
    threads: 1
    singularity: "docker://evolbioinfo/pastml:v1.9.40"
    shell:
        """
        python3 py/count_tips.py --in_nwk {input} --out_log {output}
        """

rule estimate_p_root:
    '''
    Estimate parameters on the forest.
    '''
    input:
        nwk=os.path.join(ebola_folder,'SLE.root.{i}.days.nwk'),
        log=os.path.join(ebola_folder,'SLE.root.{i}.days.tips'),
    output:
        est=os.path.join(ebola_folder,'SLE.root.{i,[0-9]+}.p=real.est'),
        est_more=os.path.join(ebola_folder,'SLE.root.{i}.p=higher.est'),
        est_less=os.path.join(ebola_folder,'SLE.root.{i}.p=lower.est'),
        time=os.path.join(ebola_folder,'SLE.root.{i,[0-9]+}.p.time'),
    params:
        mem=2000,
        name='estimate_{i}',
        qos='fast'
    threads: 3
    singularity: "docker://evolbioinfo/bdei:v0.5"
    shell:
        """
        t=`more {input.log}`
        p=`echo "print($t/533)" | python3`

        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est} --time_log {output.time} --T 1 --upper_bounds 1 100 100 0.5


        p=`echo "print($t / (0.8 * 533))" | python3`

        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est_more} --time_log {output.time} --T 1 --upper_bounds 1 100 100 0.5


        p=`echo "print($t / (1.2 * 533))" | python3`
        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est_less} --time_log {output.time} --T 1 --upper_bounds 1 100 100 0.5
        """

rule estimate_p_bottom:
    '''
    Estimate parameters on the forest.
    '''
    input:
        nwk = os.path.join(ebola_folder, 'SLE.bottom.{i}.days.nwk'),
        log = os.path.join(ebola_folder, 'SLE.bottom.{i}.days.tips'),
    output:
        est = os.path.join(ebola_folder, 'SLE.bottom.{i,[0-9]+}.p=real.est'),
        est_more = os.path.join(ebola_folder, 'SLE.bottom.{i}.p=higher.est'),
        est_less = os.path.join(ebola_folder, 'SLE.bottom.{i}.p=lower.est'),
        time = os.path.join(ebola_folder, 'SLE.bottom.{i,[0-9]+}.p.time'),
    params:
        mem = 2000,
        name = 'estimate_{i}',
        qos = 'fast'
    threads: 3
    singularity: "docker://evolbioinfo/bdei:v0.5"
    shell:
        """
        t=`more {input.log}`
        p=`echo "print($t / (13683 - 533))" | python3`
        
        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est} --time_log {output.time} --T 1 --upper_bounds 1 50 50 0.5
        
        
        p=`echo "print($t / (0.8 * (13683 - 533)))" | python3`
        
        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est_more} --time_log {output.time} --T 1 --upper_bounds 1 50 50 0.5
        
        
        p=`echo "print($t / (1.2 * (13683 - 533)))" | python3`
        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est_less} --time_log {output.time} --T 1 --upper_bounds 1 50 50 0.5
        """


rule estimate_p_bottom_u_fixed:
    '''
    Estimate parameters on the forest, having u fixed.
    '''
    input:
        nwk=os.path.join(ebola_folder,'SLE.bottom.{i}.days.nwk'),
        log=os.path.join(ebola_folder,'SLE.bottom.{i}.days.tips'),
    output:
        est=os.path.join(ebola_folder,'SLE.bottom_u.{i,[0-9]+}.p=real.est'),
        est_more=os.path.join(ebola_folder,'SLE.bottom_u.{i}.p=higher.est'),
        est_less=os.path.join(ebola_folder,'SLE.bottom_u.{i}.p=lower.est'),
        time=os.path.join(ebola_folder,'SLE.bottom_u.{i,[0-9]+}.p.time'),
    params:
        mem=2000,
        name='estimate_{i}_u',
        qos='fast'
    threads: 3
    singularity: "docker://evolbioinfo/bdei:v0.5"
    shell:
        """
        t=`more {input.log}`
        p=`echo "print($t / (13683 - 533))" | python3`
        n=`grep ";" {input.nwk} | wc -l`
        u=`echo "print(533 - $n)" | python3`

        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est} --time_log {output.time} --T 1 --upper_bounds 1 50 50 0.5 --u $u


        p=`echo "print($t / (0.8 * (13683 - 533)))" | python3`

        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est_more} --time_log {output.time} --T 1 --upper_bounds 1 50 50 0.5 --u $u


        p=`echo "print($t / (1.2 * (13683 - 533)))" | python3`
        bdei_infer --p $p --threads {threads} -c 100 --nwk {input.nwk} \
        --log {output.est_less} --time_log {output.time} --T 1 --upper_bounds 1 50 50 0.5 --u $u
        """

rule combine_estimates:
    '''
    Combine estimates.
    '''
    input:
        nwk = expand(os.path.join(ebola_folder, 'SLE.bottom.{i}.days.nwk'), i=IS),
        est = expand(os.path.join(ebola_folder, 'SLE.botto{m}.{i}.{setting}.est'), i=IS, setting=['p=' + str(_) for _ in ['real', 'lower', 'higher']], m=['m', 'm_u']),
        times = expand(os.path.join(ebola_folder, 'SLE.botto{m}.{i}.p.time'), i=IS, m=['m', 'm_u']),
    output:
        tab = os.path.join(ebola_folder, 'estimates.{type}.tab'),
        time = os.path.join(ebola_folder, 'estimates.{type}.time'),
    params:
        mem = 2000,
        name = 'estimates',
        qos = 'fast',
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6richer.1"
    shell:
        """
        python3 py/summary_table.py --forests {input.nwk} --estimates {input.est} --tab {output.tab} --times {input.times} --time {output.time}
        """
